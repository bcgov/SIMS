version: "3"

# Services
services:
  # API
  api:
    image: api-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: api-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ../packages/backend
      dockerfile: ./apps/api/Dockerfile.dev
    environment:
      - NODE_ENV=docker
      - ENVIRONMENT=local
      - PORT=${API_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_STANDALONE_MODE=${REDIS_STANDALONE_MODE}
      - QUEUE_PREFIX=${QUEUE_PREFIX}
      - KEYCLOAK_AUTH_URL=${KEYCLOAK_AUTH_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_STUDENT=${KEYCLOAK_CLIENT_STUDENT}
      - KEYCLOAK_CLIENT_INSTITUTION=${KEYCLOAK_CLIENT_INSTITUTION}
      - KEYCLOAK_CLIENT_AEST=${KEYCLOAK_CLIENT_AEST}
      - KEYCLOAK_CLIENT_SUPPORTING_USERS=${KEYCLOAK_CLIENT_SUPPORTING_USERS}
      - DB_SCHEMA=${DB_SCHEMA}
      - E2E_TEST_STUDENT_USERNAME=${E2E_TEST_STUDENT_USERNAME}
      - E2E_TEST_STUDENT_PASSWORD=${E2E_TEST_STUDENT_PASSWORD}
      - E2E_TEST_BCeID_USERNAME=${E2E_TEST_BCeID_USERNAME}
      - E2E_TEST_BCeID_PASSWORD=${E2E_TEST_BCeID_PASSWORD}
      - BCeID_WEB_SERVICE_WSDL=${BCeID_WEB_SERVICE_WSDL}
      - BCeID_WEB_SERVICE_ONLINE_SERVICE_ID=${BCeID_WEB_SERVICE_ONLINE_SERVICE_ID}
      - BCeID_WEB_SERVICE_REQUESTER_USER_GUID=${BCeID_WEB_SERVICE_REQUESTER_USER_GUID}
      - BCeID_WEB_SERVICE_AUTH_USER_NAME=${BCeID_WEB_SERVICE_AUTH_USER_NAME}
      - BCeID_WEB_SERVICE_AUTH_USER_PASSWORD=${BCeID_WEB_SERVICE_AUTH_USER_PASSWORD}
      - WORKFLOW_SA_USER_NAME=${WORKFLOW_SA_USER_NAME}
      - WORKFLOW_SA_PASSWORD=${WORKFLOW_SA_PASSWORD}
      - FORMS_URL=http://formio:3001
      - FORMS_SA_USER_NAME=${FORMS_SA_USER_NAME}
      - FORMS_SA_PASSWORD=${FORMS_SA_PASSWORD}
      - SIMS_API_CLIENT_ID=${SIMS_API_CLIENT_ID}
      - SIMS_API_CLIENT_SECRET=${SIMS_API_CLIENT_SECRET}
      - DUMMY_BCeID_ACCOUNT_RESPONSE=${DUMMY_BCeID_ACCOUNT_RESPONSE}
      - SITE_MINDER_LOGOUT_URL=${SITE_MINDER_LOGOUT_URL}
      - ATBC_LOGIN_ENDPOINT=${ATBC_LOGIN_ENDPOINT}
      - ATBC_USERNAME=${ATBC_USERNAME}
      - ATBC_PASSWORD=${ATBC_PASSWORD}
      - ATBC_APP=${ATBC_APP}
      - ATBC_ENDPOINT=${ATBC_ENDPOINT}
      - FILE_UPLOAD_MAX_FILE_SIZE=${FILE_UPLOAD_MAX_FILE_SIZE}
      - FILE_UPLOAD_ALLOWED_EXTENSIONS=${FILE_UPLOAD_ALLOWED_EXTENSIONS}
      - BYPASS_APPLICATION_SUBMIT_VALIDATIONS=${BYPASS_APPLICATION_SUBMIT_VALIDATIONS}
      - SWAGGER_ENABLED=${SWAGGER_ENABLED}
      - E2E_TEST_AEST_BUSINESS_ADMINISTRATORS_USER=${E2E_TEST_AEST_BUSINESS_ADMINISTRATORS_USER}
      - E2E_TEST_AEST_OPERATIONS_USER=${E2E_TEST_AEST_OPERATIONS_USER}
      - E2E_TEST_AEST_OPERATIONS_ADMINISTRATORS_USER=${E2E_TEST_AEST_OPERATIONS_ADMINISTRATORS_USER}
      - E2E_TEST_AEST_MOF_OPERATIONS_USER=${E2E_TEST_AEST_MOF_OPERATIONS_USER}
      - E2E_TEST_AEST_READ_ONLY_USER=${E2E_TEST_AEST_READ_ONLY_USER}
      - E2E_TEST_PASSWORD=${E2E_TEST_PASSWORD}
      - DISABLE_ORM_CACHE=${DISABLE_ORM_CACHE}
    networks:
      - local-network-tests
    restart: always
    depends_on:
      - postgres
  # - API
  # Workers
  workers:
    image: workers-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: workers-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ../packages/backend
      dockerfile: ./apps/workers/Dockerfile.dev
    environment:
      - NODE_ENV=docker
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ZEEBE_ADDRESS=zeebe:26500
      - ZEEBE_CLIENT_ID=${ZEEBE_CLIENT_ID}
      - ZEEBE_CLIENT_SECRET=${ZEEBE_CLIENT_SECRET}
      - ZEEBE_AUTHORIZATION_SERVER_URL=${ZEEBE_AUTHORIZATION_SERVER_URL}
      - BYPASS_CRA_INCOME_VERIFICATION=${BYPASS_CRA_INCOME_VERIFICATION}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_STANDALONE_MODE=${REDIS_STANDALONE_MODE}
      - DISABLE_ORM_CACHE=${DISABLE_ORM_CACHE}
    networks:
      - local-network-tests
    restart: always
    depends_on:
      - postgres
  # - Workers
  # Queue consumers
  queue-consumers:
    image: queue-consumers-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: queue-consumers-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ../packages/backend
      dockerfile: ./apps/queue-consumers/Dockerfile.dev
    environment:
      - NODE_ENV=docker
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ZEEBE_ADDRESS=zeebe:26500
      - ZEEBE_CLIENT_ID=${ZEEBE_CLIENT_ID}
      - ZEEBE_CLIENT_SECRET=${ZEEBE_CLIENT_SECRET}
      - ZEEBE_AUTHORIZATION_SERVER_URL=${ZEEBE_AUTHORIZATION_SERVER_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_STANDALONE_MODE=${REDIS_STANDALONE_MODE}
      - QUEUE_DASHBOARD_USER=${QUEUE_DASHBOARD_USER}
      - QUEUE_DASHBOARD_PASSWORD=${QUEUE_DASHBOARD_PASSWORD}
      - QUEUE_PREFIX=${QUEUE_PREFIX}
      - INSTITUTION_REQUEST_FOLDER=${INSTITUTION_REQUEST_FOLDER}
      - INSTITUTION_RESPONSE_FOLDER=${INSTITUTION_RESPONSE_FOLDER}
      - GC_NOTIFY_URL=${GC_NOTIFY_URL}
      - GC_NOTIFY_API_KEY=${GC_NOTIFY_API_KEY}
      - GC_NOTIFY_TO_ADDRESS=${GC_NOTIFY_TO_ADDRESS}
      - ZONE_B_SFTP_SERVER=${ZONE_B_SFTP_SERVER}
      - ZONE_B_SFTP_SERVER_PORT=${ZONE_B_SFTP_SERVER_PORT}
      - ZONE_B_SFTP_USER_NAME=${ZONE_B_SFTP_USER_NAME}
      - ZONE_B_SFTP_PRIVATE_KEY_PASSPHRASE=${ZONE_B_SFTP_PRIVATE_KEY_PASSPHRASE}
      - ZONE_B_SFTP_PRIVATE_KEY=${ZONE_B_SFTP_PRIVATE_KEY}
      - SFAS_RECEIVE_FOLDER=${SFAS_RECEIVE_FOLDER}
      - ATBC_LOGIN_ENDPOINT=${ATBC_LOGIN_ENDPOINT}
      - ATBC_USERNAME=${ATBC_USERNAME}
      - ATBC_PASSWORD=${ATBC_PASSWORD}
      - ATBC_APP=${ATBC_APP}
      - ATBC_ENDPOINT=${ATBC_ENDPOINT}
      - CRA_REQUEST_FOLDER=${CRA_REQUEST_FOLDER}
      - CRA_RESPONSE_FOLDER=${CRA_RESPONSE_FOLDER}
      - CRA_PROGRAM_AREA_CODE=${CRA_PROGRAM_AREA_CODE}
      - CRA_ENVIRONMENT_CODE=${CRA_ENVIRONMENT_CODE}
      - ESDC_REQUEST_FOLDER=${ESDC_REQUEST_FOLDER}
      - ESDC_RESPONSE_FOLDER=${ESDC_RESPONSE_FOLDER}
      - ESDC_ENVIRONMENT_CODE=${ESDC_ENVIRONMENT_CODE}
      - APPLICATION_ARCHIVE_DAYS=${APPLICATION_ARCHIVE_DAYS}
      - QUEUE_CONSUMERS_PORT=${QUEUE_CONSUMERS_PORT}
      - DISABLE_ORM_CACHE=${DISABLE_ORM_CACHE}
    networks:
      - local-network-tests
    restart: always
    depends_on:
      - postgres
  # - Queues
  # Postgres
  postgres:
    image: postgres-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: db-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ../.docker/postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: -p ${POSTGRES_PORT}
    networks:
      - local-network-tests
  # - Postgres
  # - services
  # Networks
networks:
  local-network-tests:
    driver: bridge
# - Networks
