import { DisbursementValue, EducationProgramOffering } from "@sims/sims-db";

/**
 * Award information needed for the max tuition remittance calculation.
 */
export type Award = Pick<
  DisbursementValue,
  "valueType" | "disbursedAmountSubtracted" | "valueAmount" | "effectiveAmount"
>;

/**
 * Offering information needed for the max tuition remittance calculation.
 */
export type OfferingCosts = Pick<
  EducationProgramOffering,
  "actualTuitionCosts" | "programRelatedCosts"
>;

/**
 * Different options to have the tuition remittance calculated.
 */
export enum MaxTuitionRemittanceTypes {
  /**
   * Includes the total awards values calculated by the assessment
   * subtracting the possible values already paid to the student for the
   * same application. Useful to get an estimated value when the
   * disbursement didn't happen yet (e-Cert was not generated).
   */
  Estimated,
  /**
   * Calculated based on the effective values generated by the system
   * during the disbursement and that were added to the e-Cert.
   */
  Effective,
}

/**
 * COE approval period status.
 */
export enum COEApprovalPeriodStatus {
  /**
   * COE is within its valid approval period and can be approved.
   */
  WithinApprovalPeriod = "Within approval period",
  /**
   * COE is currently before its approval period
   * and needs to wait until approval period to be confirmed.
   */
  BeforeApprovalPeriod = "Before approval period",
  /**
   * The COE is currently crossed its approval period and cannot be confirmed by institution.
   */
  AfterApprovalPeriod = "After approval period",
}
