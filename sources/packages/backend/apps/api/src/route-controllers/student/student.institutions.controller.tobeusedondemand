import { Controller, Get, Param, ParseIntPipe } from "@nestjs/common";
import { ApiTags } from "@nestjs/swagger";
import { ClientTypeBaseRoute } from "../../types";
import { AuthorizedParties } from "../../auth/authorized-parties.enum";
import { AllowAuthorizedParty } from "../../auth/decorators";
import BaseController from "../BaseController";
import { StudentProfileAPIOutDTO } from "./models/student.dto";
import { StudentControllerService } from "./student.controller.service";

/**
 * Student controller for institutions.
 */
@AllowAuthorizedParty(AuthorizedParties.institution)
@Controller("student")
@ApiTags(`${ClientTypeBaseRoute.Institution}-student`)
export class StudentInstitutionsController extends BaseController {
  constructor(
    private readonly studentControllerService: StudentControllerService,
  ) {
    super();
  }

  /**
   * Search students based on the search criteria.
   * @param searchCriteria criteria to be used in the search.
   * @returns searched student details.
   */
  @Get(":studentId")
  async getStudentProfile(
    @Param("studentId", ParseIntPipe) studentId: number,
  ): Promise<StudentProfileAPIOutDTO> {
    return await this.studentControllerService.getStudentProfile(studentId);
  }
}
