# "build-stage", based on Node.js, to build and compile the frontend.
FROM node:16.17.0-alpine3.16 AS build-stage

LABEL maintainer="BC GOV"

# Application Port.
ENV PORT 8080

# Setting app as work dir.
WORKDIR /app

# Copying package.json and package-lock.json.
COPY ./package*.json ./

# Installing dependencies.
RUN npm ci

# Copying sources.
COPY . .

# Building app
RUN npm run build-local

# Get a nginx image to have only the compiled app ready for production.
FROM nginx:1.22 AS production-stage

# Exposing application port.
EXPOSE ${PORT}

RUN mkdir /app

# Copy the app built on build-stage to the resulting container.
COPY --from=build-stage /app/dist /app

# Copying the configuration file.
COPY nginx.conf /etc/nginx/nginx.conf

# Daemon off makes nginx to run on the foreground with only one process.
# Docker will kill the container if the process dies.
CMD ["nginx", "-g", "daemon off;"]