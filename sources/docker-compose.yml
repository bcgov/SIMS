version: "3"

# Services
services:
  # API
  api:
    image: api-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: api-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ./packages/api
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=docker
      - PORT=${API_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - KEYCLOAK_AUTH_URL=${KEYCLOAK_AUTH_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT_STUDENT=${KEYCLOAK_CLIENT_STUDENT}
      - KEYCLOAK_CLIENT_INSTITUTION=${KEYCLOAK_CLIENT_INSTITUTION}
      - KEYCLOAK_CLIENT_AEST=${KEYCLOAK_CLIENT_AEST}
      - KEYCLOAK_CLIENT_SUPPORTING_USERS=${KEYCLOAK_CLIENT_SUPPORTING_USERS}
      - DB_SCHEMA=${DB_SCHEMA}
      - ENVIRONMENT=local
      - E2E_TEST_STUDENT_USERNAME=${E2E_TEST_STUDENT_USERNAME}
      - E2E_TEST_STUDENT_PASSWORD=${E2E_TEST_STUDENT_PASSWORD}
      - E2E_TEST_BCeID_USERNAME=${E2E_TEST_BCeID_USERNAME}
      - E2E_TEST_BCeID_PASSWORD=${E2E_TEST_BCeID_PASSWORD}
      - BCeID_WEB_SERVICE_WSDL=${BCeID_WEB_SERVICE_WSDL}
      - BCeID_WEB_SERVICE_ONLINE_SERVICE_ID=${BCeID_WEB_SERVICE_ONLINE_SERVICE_ID}
      - BCeID_WEB_SERVICE_REQUESTER_USER_GUID=${BCeID_WEB_SERVICE_REQUESTER_USER_GUID}
      - BCeID_WEB_SERVICE_AUTH_USER_NAME=${BCeID_WEB_SERVICE_AUTH_USER_NAME}
      - BCeID_WEB_SERVICE_AUTH_USER_PASSWORD=${BCeID_WEB_SERVICE_AUTH_USER_PASSWORD}
      - RULE_ENGINE_URL=${RULE_ENGINE_URL}
      - WORKFLOW_SA_USER_NAME=${WORKFLOW_SA_USER_NAME}
      - WORKFLOW_SA_PASSWORD=${WORKFLOW_SA_PASSWORD}
      - FORMS_URL=${FORMS_URL}
      - FORMS_SA_USER_NAME=${FORMS_SA_USER_NAME}
      - FORMS_SA_PASSWORD=${FORMS_SA_PASSWORD}
      - FORMS_FLOW_API_URL=${FORMS_FLOW_API_URL}
      - SIMS_API_CLIENT_ID=${SIMS_API_CLIENT_ID}
      - SIMS_API_CLIENT_SECRET=${SIMS_API_CLIENT_SECRET}
      - DUMMY_BCeID_ACCOUNT_RESPONSE=${DUMMY_BCeID_ACCOUNT_RESPONSE}
      - SITE_MINDER_LOGOUT_URL=${SITE_MINDER_LOGOUT_URL}
      - CRA_REQUEST_FOLDER=${CRA_REQUEST_FOLDER}
      - CRA_RESPONSE_FOLDER=${CRA_RESPONSE_FOLDER}
      - CRA_PROGRAM_AREA_CODE=${CRA_PROGRAM_AREA_CODE}
      - CRA_ENVIRONMENT_CODE=${CRA_ENVIRONMENT_CODE}
      - ESDC_REQUEST_FOLDER=${ESDC_REQUEST_FOLDER}
      - ESDC_RESPONSE_FOLDER=${ESDC_RESPONSE_FOLDER}
      - ESDC_ENVIRONMENT_CODE=${ESDC_ENVIRONMENT_CODE}
      - ZONE_B_SFTP_SERVER=${ZONE_B_SFTP_SERVER}
      - ZONE_B_SFTP_SERVER_PORT=${ZONE_B_SFTP_SERVER_PORT}
      - ZONE_B_SFTP_USER_NAME=${ZONE_B_SFTP_USER_NAME}
      - ZONE_B_SFTP_PRIVATE_KEY_PASSPHRASE=${ZONE_B_SFTP_PRIVATE_KEY_PASSPHRASE}
      - ZONE_B_SFTP_PRIVATE_KEY=${ZONE_B_SFTP_PRIVATE_KEY}
      - ATBC_LOGIN_ENDPOINT=${ATBC_LOGIN_ENDPOINT}
      - ATBC_USERNAME=${ATBC_USERNAME}
      - ATBC_PASSWORD=${ATBC_PASSWORD}
      - ATBC_APP=${ATBC_APP}
      - ATBC_ENDPOINT=${ATBC_ENDPOINT}
      - FILE_UPLOAD_MAX_FILE_SIZE=${FILE_UPLOAD_MAX_FILE_SIZE}
      - FILE_UPLOAD_ALLOWED_EXTENSIONS=${FILE_UPLOAD_ALLOWED_EXTENSIONS}
      - FORMS_FLOW_BPM_CLIENT_SECRET=${FORMS_FLOW_BPM_CLIENT_SECRET}
      - BYPASS_CRA_INCOME_VERIFICATION=${BYPASS_CRA_INCOME_VERIFICATION}
      - BYPASS_APPLICATION_SUBMIT_VALIDATIONS=${BYPASS_APPLICATION_SUBMIT_VALIDATIONS}
      - SFAS_RECEIVE_FOLDER=${SFAS_RECEIVE_FOLDER}
      - SWAGGER_ENABLED=${SWAGGER_ENABLED}
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./packages/api/src:/app/src
    networks:
      - local-network
    restart: always
    depends_on:
      - postgres
  # - API
  # App
  web:
    image: web-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: web-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ./packages/web
      dockerfile: Dockerfile.dev
    environment:
      - PORT=${APP_PORT}
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./packages/web/src:/app/src
    networks:
      - local-network
    restart: always
    depends_on:
      - api
  # - App
  # Postgres
  postgres:
    image: postgres-${PROJECT_NAME}:${BUILD_REF}-${BUILD_ID}
    container_name: db-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}
    build:
      context: ./.docker/postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PORT=${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - local-network
  # - Postgres
  # - services
  # Networks
networks:
  local-network:
    driver: bridge
# - Networks
# Volumes
volumes:
  postgres:
    name: postgres-${PROJECT_NAME}-${BUILD_REF}-${BUILD_ID}

# - Volumes
