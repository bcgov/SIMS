apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}
labels:
  project: ${PROJECT}
  service: ${SERVICE_NAME}
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      replicas: "${{REPLICAS}}"
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: ${NAME}
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: ${NAME}
        spec:
          containers:
            - env:
                - name: NODE_ENV
                  value: ${NODE_ENV}
                - name: PORT
                  value: "${PORT}"
              image: ${IMAGE_REGISTRY}/${BUILD_NAMESPACE}/${IMAGE_STREAM_TAG}
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: "${{PORT}}"
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                failureThreshold: 3
                successThreshold: 1
                httpGet:
                  path: /
                  port: "${{PORT}}"
                initialDelaySeconds: 20
                periodSeconds: 30
                timeoutSeconds: 15
              livenessProbe:
                failureThreshold: 3
                successThreshold: 1
                httpGet:
                  path: /
                  port: "${{PORT}}"
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 30
                timeoutSeconds: 15
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}
    spec:
      ports:
        - name: http
          port: 80
          targetPort: ${{PORT}}
      selector:
        app: ${NAME}
      type: ClusterIP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}-route
      annotations:
        haproxy.router.openshift.io/balance: leastconn
        haproxy.router.openshift.io/disable_cookies: "true"
        haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
        haproxy.router.openshift.io/timeout: 30s
    spec:
      host: ${HOST_NAME}
      path: ${PATH}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
        certificate: |
          -----BEGIN CERTIFICATE-----
          ${TLS_CERTIFICATE}
          -----END CERTIFICATE-----
        key: |
          -----BEGIN PRIVATE KEY-----
          ${TLS_KEY}
          -----END PRIVATE KEY-----
        caCertificate: |
          -----BEGIN CERTIFICATE-----
          ${TLS_CA_CERTIFICATE}
          -----END CERTIFICATE-----
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: autoscaling/v2
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}-hpa
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: ${NAME}
      minReplicas: "${{REPLICAS}}"
      maxReplicas: 10
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80
        - type: Resource
          resource:
            name: memory
            target:
              type: AverageValue
              averageValue: "230M"
  - apiVersion: policy/v1
    kind: PodDisruptionBudget
    metadata:
      name: ${NAME}-pdb
    spec:
      selector:
        matchLabels:
          app: ${NAME}
      maxUnavailable: 1
parameters:
  - name: NAME
    required: true
  - name: PROJECT
    value: sims
  - name: SERVICE_NAME
    value: web
  - name: MEMORY_LIMIT
    required: true
  - name: CPU_REQUEST
    required: true
  - name: MEMORY_REQUEST
    required: true
  - name: REPLICAS
    value: "2"
  - name: PORT
    required: true
  - name: IMAGE_STREAM_TAG
    required: true
  - name: BUILD_NAMESPACE
    required: true
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
  - name: PATH
    value: "/"
  - name: NODE_ENV
    value: "production"
  - name: HOST_NAME
    required: true
  - name: TLS_CERTIFICATE
    required: true
  - name: TLS_KEY
    required: true
  - name: TLS_CA_CERTIFICATE
    required: true
