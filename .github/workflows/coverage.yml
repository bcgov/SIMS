name: Coverage

on: [pull_request]

jobs:
  api-e2e-tests:
    name: SIMS API E2E tests
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: aest-sims
      BUILD_ID: ${{ github.event.number }}
      POSTGRES_PASSWORD: bcgov!
      BUILD_REF: ${{ github.base_ref }}
      POSTGRES_DB: sims
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
      REDIS_STANDALONE_MODE: "true"
      QUEUE_PREFIX: "{sims-local}"
      API_PORT: 3000
      APP_PORT: 8080
      QUEUE_CONSUMERS_PORT: 3001
      DB_SCHEMA: sims
      KEYCLOAK_REALM: "aestsims"
      KEYCLOAK_AUTH_URL: "https://dev.loginproxy.gov.bc.ca/auth/"
      BCeID_WEB_SERVICE_WSDL: "https://gws1.test.bceid.ca/webservices/Client/V10/BCeIDService.asmx?wsdl"
      E2E_TEST_STUDENT_USERNAME: student_e2e_test
      E2E_TEST_STUDENT_PASSWORD: ${{ secrets.TEST_STUDENT_PASSWORD }}
      E2E_TEST_AEST_BUSINESS_ADMINISTRATORS_USER: ministry-user-aest-business-administrators@e2e-tests
      E2E_TEST_AEST_BUSINESS_ADMINISTRATORS_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
      E2E_TEST_AEST_OPERATIONS_USER: ministry-user-aest-operations@e2e-tests
      E2E_TEST_AEST_OPERATIONS_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
      E2E_TEST_AEST_OPERATIONS_ADMINISTRATORS_USER: ministry-user-aest-operations-administrators@e2e-tests
      E2E_TEST_AEST_OPERATIONS_ADMINISTRATORS_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
      E2E_TEST_AEST_MOF_OPERATIONS_USER: ministry-user-mof-operations@e2e-tests
      E2E_TEST_AEST_MOF_OPERATIONS_PASSWORD: ${{ secrets.E2E_TEST_PASSWORD }}
    steps:
      # Checkout the PR branch.
      - name: Checkout Target Branch
        uses: actions/checkout@v3
      # Generate the coverage report for API
      - name: Run API E2E tests on Docker
        working-directory: "./sources/"
        run: |
          make e2e-tests-api
      - name: SIMS API E2E tests Coverage
        uses: slavcodev/coverage-monitor-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          status_context: "sims-api"
          comment_context: "E2E SIMS API Coverage Report"
          coverage_path: "sources/packages/backend/coverage/api/clover.xml"
          threshold_alert: 1
          threshold_warning: 50
          threshold_metric: "lines"
          comment_footer: false
  workers-e2e-tests:
    name: Workflow Workers E2E tests
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: aest-sims
      BUILD_ID: ${{ github.event.number }}
      POSTGRES_PASSWORD: bcgov!
      BUILD_REF: ${{ github.base_ref }}
      POSTGRES_DB: sims
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
      REDIS_STANDALONE_MODE: "true"
      QUEUE_PREFIX: "{sims-local}"
      API_PORT: 3000
      APP_PORT: 8080
      QUEUE_CONSUMERS_PORT: 3001
      DB_SCHEMA: sims
    steps:
      # Checkout the PR branch.
      - name: Checkout Target Branch
        uses: actions/checkout@v3
      # Generate the coverage report for Workflow Workers
      - name: Run Workflow Workers E2E tests on Docker
        working-directory: "./sources/"
        run: |
          make e2e-tests-workers
      - name: Workflow Workers E2E tests Coverage
        uses: slavcodev/coverage-monitor-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          status_context: "workers"
          comment_context: "E2E Workflow Workers Coverage Report"
          coverage_path: "sources/packages/backend/coverage/workers/clover.xml"
          threshold_alert: 1
          threshold_warning: 50
          threshold_metric: "lines"
          comment_footer: false
  queue-consumers-e2e-tests:
    name: Queue Consumers E2E tests
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: aest-sims
      BUILD_ID: ${{ github.event.number }}
      POSTGRES_PASSWORD: bcgov!
      BUILD_REF: ${{ github.base_ref }}
      POSTGRES_DB: sims
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis
      REDIS_STANDALONE_MODE: "true"
      QUEUE_PREFIX: "{sims-local}"
      API_PORT: 3000
      APP_PORT: 8080
      QUEUE_CONSUMERS_PORT: 3001
      DB_SCHEMA: sims
    steps:
      # Checkout the PR branch.
      - name: Checkout Target Branch
        uses: actions/checkout@v3
      # Generate the coverage report for Queue Consumers
      - name: Run Queue Consumers E2E tests on Docker
        working-directory: "./sources/"
        run: |
          make e2e-tests-queue-consumers
      - name: Queue Consumers E2E tests Coverage
        uses: slavcodev/coverage-monitor-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          status_context: "queue-consumers"
          comment_context: "E2E Queue Consumers Coverage Report"
          coverage_path: "sources/packages/backend/coverage/queue-consumers/clover.xml"
          threshold_alert: 1
          threshold_warning: 50
          threshold_metric: "lines"
          comment_footer: false
  backend-unit-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    steps:
      # Checkout the PR branch.
      - name: Checkout Target Branch
        uses: actions/checkout@v3
      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      # Run units tests and generate the coverage report.
      - name: Run Unit Tests
        working-directory: "./sources/"
        run: |
          make backend-unit-tests
      - name: Backend Units Tests Coverage
        uses: slavcodev/coverage-monitor-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          status_context: "backend-unit-tests"
          comment_context: "Backend Unit Tests Coverage Report"
          coverage_path: "sources/packages/backend/coverage/unit-tests/clover.xml"
          threshold_alert: 1
          threshold_warning: 50
          threshold_metric: "lines"
          comment_footer: false
