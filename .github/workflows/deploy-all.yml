name: Deploy to OpenShift/Camunda

on:
  workflow_dispatch:
    inputs:
      gitRef:
        description: "Git Ref (e.g. v1.0.0 or v1.0.0-prerelease.1)"
        required: true
        default: ""
      environment:
        description: 'Openshift Environment'
        required: true
        type: environment
      deployCamundaDefinitions:
        description: "Deploy Camunda BPMN/DMN from main"
        type: boolean
        default: true
      deployFormioDefinitions:
        description: "Deploy Form.io forms from main"
        type: boolean
        default: true
  workflow_call:
    inputs:
      gitRef:
        required: true
        type: string
      environment:
        required: true
        type: string
      deployCamundaDefinitions:
        required: true
        type: string
      deployFormioDefinitions:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy Web, SIMS-Api, Workers, and DB
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      NAMESPACE: ${{ secrets.OPENSHIFT_ENV_NAMESPACE }}
      BUILD_REF: ${{ github.event.inputs.gitRef }}
      HOST_PREFIX: ${{ secrets.HOST_PREFIX }}
      BUILD_NAMESPACE: 0c27fb-tools
      KEYCLOAK_REALM: "aestsims"
      KEYCLOAK_AUTH_URL: ${{ secrets.KEYCLOAK_AUTH_URL }}
      BCeID_WEB_SERVICE_WSDL: ${{ secrets.BCeID_WEB_SERVICE_WSDL }}
      SITE_MINDER_LOGOUT_URL: ${{ secrets.SITE_MINDER_LOGOUT_URL }}
      ATBC_LOGIN_ENDPOINT: ${{ secrets.ATBC_LOGIN_ENDPOINT }}
      ATBC_ENDPOINT: ${{ secrets.ATBC_ENDPOINT }}
      SWAGGER_ENABLED: true
      APPLICATION_ARCHIVE_DAYS: 43
      BYPASS_APPLICATION_SUBMIT_VALIDATIONS: ${{ secrets.BYPASS_APPLICATION_SUBMIT_VALIDATIONS }}
      BYPASS_CRA_INCOME_VERIFICATION: ${{ secrets.BYPASS_CRA_INCOME_VERIFICATION }}
      API_SECRET_NAME: ${{ secrets.OPENSHIFT_SIMS_CREDS_NAME }}
      WORKERS_SECRET_NAME: ${{ secrets.OPENSHIFT_SIMS_CREDS_NAME }}
      QUEUE_CONSUMERS_SECRET_NAME: ${{ secrets.OPENSHIFT_SIMS_CREDS_NAME }}
      FORMS_SECRET_NAME: ${{ secrets.FORMS_SECRET_NAME }}
      QUEUE_PREFIX: ${{ secrets.QUEUE_PREFIX }}
      API_PORT: ${{ secrets.API_PORT }}
      WEB_PORT: ${{ secrets.WEB_PORT }}
      DATABASE_NAME_KEY: ${{ secrets.DATABASE_NAME_KEY }}
    steps:
      - name: Print env
        run: |
          echo BUILD NAMESPACE: $BUILD_NAMESPACE
          echo NAMESPACE: $NAMESPACE
          echo BRANCH: $BUILD_REF
          echo HOST_PREFIX: $HOST_PREFIX
      # Checkout the PR branch
      - name: Checkout Target Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.gitRef }}
      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      - name: Log in to OpenShift
        run: |
          oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443
          if [ $? -ne 0 ]; then
            echo "Failed to log in to OpenShift. Please check the credentials and connection details."
            exit 1
          fi
      # Run db-migrations
      - name: Run db-migrations
        working-directory: "./devops/"
        run: |
          make oc-run-db-migrations
          if [ $? -ne 0 ]; then
            echo "Failed to run DB Migrations."
            exit 1
          fi
      # Deploy SIMS-API, Workers, Queues, and Web/Frontend in parallel after db-migrations.
      - name: Deploy SIMS-API, Workers, Queues, and Web/Frontend in parallel
        working-directory: "./devops/"
        run: |
          make oc-deploy-api &
          make oc-deploy-workers &
          make oc-deploy-queue-consumers &
          make oc-deploy-web &
      - name: Wait for parallel deployments to finish
        run: |
          wait
  deployCamundaDefinitions:
    if: ${{ github.event.inputs.deployCamundaDefinitions == 'true' }}
    name: Deploy BPMNs and DMNs to Camunda
    needs:
      - deploy
    uses: ./.github/workflows/deploy-camunda-definitions.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      gitRef: ${{ github.event.inputs.gitRef }}
    secrets: inherit
  deployFormioDefinitions:
    if: ${{ github.event.inputs.deployFormioDefinitions == 'true' }}
    name: Deploy Form.io definitions
    needs:
      - deploy
    uses: ./.github/workflows/deploy-formio-definitions.yml
    with:
      environment: ${{ github.event.inputs.environment }}
      gitRef: ${{ github.event.inputs.gitRef }}
    secrets: inherit
