name: Build and Deploy to OpenShift/Camunda - DEV

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    branches:
      - main
  workflow_dispatch:

jobs:
  # Print variables for logging and debugging purposes
  checkEnv:
    name: Check Env variables
    runs-on: ubuntu-latest
    steps:
      - name: Print Env Vars
        run: |
          echo Git Base Ref: ${{ github.base_ref }}
          echo Git Build ID: ${{ github.event.number }}
          echo Git Pull Request Ref: ${{ github.event.pull_request.head.sha }}
          echo OC CLI Version: $(oc version)

  # Build Web, SIMS-Api and Workers
  build:
    name: Build Web, SIMS-Api and Workers
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true}}
    env:
      BUILD_ID: ${{ github.event.number }}
      BUILD_NAMESPACE: 0c27fb-tools
      BUILD_REF: ${{ github.base_ref }}
    steps:
      # Checkout the PR branch
      - name: Print env
        run: |
          echo BUILD ID: $BUILD_ID
          echo BUILD NAMESPACE: $BUILD_NAMESPACE
          echo BRANCH: $BUILD_REF
      - name: Checkout Target Branch
        uses: actions/checkout@v3
      # Log in to OpenShift.
      # Note: The secrets needed to log in are NOT available if the PR comes from a FORK.
      # PR's must originate from a branch off the original repo or else all openshift `oc` commands will fail.
      # - name: Log in to OpenShift
      #   run: |
      #     oc login --token=${{ secrets.SA_TOKEN }} --server=https://api.silver.devops.gov.bc.ca:6443
      # # Build the images
      # - name: Build SIMS-API Image
      #   working-directory: "./devops"
      #   run: |
      #     make oc-build-api
      # - name: Build Workers Image
      #   working-directory: "./devops"
      #   run: |
      #     make oc-build-workers
      # - name: Build Web/Frontend Image
      #   working-directory: "./devops"
      #   run: |
      #     make oc-build-web

  # Deploy Web, SIMS-Api and Workers
  deployDev:
    name: Deploy Web, SIMS-Api and Workers to DEV environment
    needs:
      - build
    uses: ./.github/workflows/deploy-all.yml
    with:
      buildRef: ${{ github.base_ref }}
      buildId: ${{ github.event.number }}
      resourcesFolder: "BPMN/camunda-8"
      environment: "DEV"
      deployCamundaDefinitions: "false"
      deployFormioDefinitions: "false"
    secrets: inherit
